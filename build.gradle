plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'com.epages.restdocs-api-spec' version '0.16.0'
    id 'jacoco'
    id 'org.sonarqube' version "3.4.0.2513"
    id 'com.google.cloud.tools.jib' version '3.2.1'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {

    // web & security
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // db
    runtimeOnly 'com.h2database:h2'
    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

jacoco {
    toolVersion = "0.8.8"
}
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            enabled = true

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.60
            }
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.60
            }
        }
    }
    finalizedBy 'copyTest'

}

sonarqube {
    properties {
        property "sonar.projectKey", "Rchicken_booktudy"
        property "sonar.organization", "rchicken"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

openapi3 {
    server = 'http://localhost:8080'
    title = 'RestDocs to Swagger 변환 테스트'
    description = 'Restdocs로 API 문서 작성 후 이를 Swagger로 변환하는 페이지'
    version = '0.0.1-SNAPSHOT'
    format = 'yaml'
//
//    oauth2SecuritySchemeDefinition = {
//        flows = ['authorizationCode']
//        tokenUrl = 'http://example.com/token'
//        authorizationUrl = 'http://example.com/authorize'
//        scopeDescriptionsPropertiesFile = "scopeDescriptions.yaml"
//    }
}

task copyTest {
    dependsOn("openapi3")
    copy {
        from "$buildDir/api-spec/openapi3.yaml"
        into "src/main/resources/static/docs/."
    }
}

jib {
    from {
        image = "amazoncorretto:17.0.4-al2"
        platforms {
            platform {
                architecture = "arm64"
                os = "linux"
            }
            platform {
                architecture = "amd64"
                os = "linux"
            }
        }
    }
    to {
        image = "zxcv9203/${project.name}"
        tags = ["${project.version.toString().toLowerCase()}"]
    }
    container {
        jvmFlags = ['-Xms512m']
    }
}
